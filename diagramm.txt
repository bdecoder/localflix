1) pĥase pré lancement du site
Indexation
demander si il s'agit d'un film ou d'une série

film:
Récupération du nom du film
check si il existe un film à ce nom
Si non: 
	dire à l'user que le film n'existe pas
	lui demander de réentrer le nom de son film (retour au début du prog)
Si oui: 
	suggestion du nom + description + note rottentomato du film
	si l'user n'accepte pas: 
		lui demander de réentrer le nom de son film (retour au début fu prog)
	si l'user accepte:
		demander la localisation du film à l'user
		déplacement du film dans le fichier 'film'
		modification du nom du fichier pour le faire correspondre au nom du film
		création d'un tubnmail
		ajouter le film (toutes les info) à la db (sql)
		lui demander si il veut continuer à add des film
		si oui: 
			recommencer le prog
		si non:
			exit 0
			
série:
Récupération du nom de la série
check si il existe un film à ce nom
Si non: 
	dire à l'user que la série n'existe pas
	lui demander de réentrer le nom de sa série (retour au début du prog)
Si oui: 
	suggestion du nom + description + note rottentomato de la série
	si l'user n'accepte pas: 
		lui demander de réentrer le nom de sa série (retour au début fu prog)
	si l'user accepte:
		demander la localisation du dossier contenant la série à l'user
		si la série n'est pas standardisé:
			rappel de la syntaxe des fichiers
			retour au début du prog
		si la série est standardisé:
			pour chaque episode:
				création d'un dossier spécifique portant le nom de la série
				déplacement de l'épisode dans le dossier 'série/$serie name'
				modification du nom du fichier pour le faire correspondre au nom de l'épisode
				création d'un tubnmail
				ajouter l'épisode (toutes les info) à la db (sql)
			lui demander si il veut continuer à add des film
			si oui: 
				recommencer le prog
			si non:
				exit 0
				




structuration de la db main
1: nom de la série/film
2: lien vers la db spécifique
3: type de la série/film
4: tag de la série/film
5: film/la série regardé ou non

structuration de la db film
1: nom du film
2: note rottentomato
3: description du film
4: path vers le fichier png
5: path vers le film
6: niveau de visionnage

structuratio de la db série 
1: nom de l'épisode
2: numéro de l'épisode
3: note rottentomato de l'épisode
4: description de l'épisode
5: path vers le fichier png
6: path vers la vidéo
7: type de la série
8: tag de la série
9: niveau de visionnage





2) lancement du site:
partie back:
lancement du site
	récupération dans la db des 5 derniers films add
	récupération dans la db des 5 dernières séries add
	récupération dans une db spéciale les deniers film regardés
	récupération dans des différents genres
le search engine
	récupération de l'input utilisateur
	check si un nom de film/série/épisode de série correspond
	si non, check si un genre/un tag correspond
	retourner les valeurs trouvés à l'utilisateur
	option ne pas afficher les film déjas regardé
pendant le visionage
	toutes les 5 minutes marquer l'avancement de l'utilisateur dans le visonnage
	si il reste -5minutes, marquer le film comme regardé
	ne pas compter les 10 premières minutes

partie front:
main
	bandeau frontal avec logo + search engine
	bandeau défilant avec des séries non regardés ou partiellemnt regardé (si aucun remplacer par des images)
	1ere ligne: série/film en cour
	2eme ligne: regardé réçament
	3-5eme ligne: genre proposés
search
	le bandeau frontal
	barre de texte
	case: ne pas montrer les filsm déja regardé
page série
	le bandeau frontal
	tubnmail de la série
	présentation de la série
	présentation des différents éléments de la saison $saison
	menu dépliant pour sélectionner la saison (de base saison 1)
	info a chier sur la série (auteur, note, tag, ...)
page film
	le bandeau frontal
	tubnmail de le film
	présentation du film
	info a chier sur le film (auteur, note, tag, ...)
	bouton commencer le film
page visionnage
	le bandeau frontal
	la vidéo
	le titre
	l'auteur
